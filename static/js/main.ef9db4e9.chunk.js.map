{"version":3,"sources":["components/Counter/styles.js","components/Counter/index.js","containers/CounterContainer.js","components/ParentCounter/styles.js","components/ParentCounter/index.js","App.js","index.js"],"names":["styles","counter","display","flexDirection","width","marginTop","paddingBottom","border","borderRadius","backgroundColor","mainPart","justifyContent","h1","margin","padding","fontSize","textAlign","color","h2","buttonsContainer","Counter","id","count","increment","decrement","reset","style","Button","variant","onClick","CounterContainer","props","setState","state","isRender","console","log","this","nextProps","isAdded","nextState","Component","parentCounter","button","ParentCounter","add","remove","window","location","reload","App","React","useState","counters","setCounters","setIsAdded","length","slice","className","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAuCeA,EAvCA,CACXC,QAAS,CACLC,QAAS,OACTC,cAAe,SACfC,MAAO,QACPC,UAAW,OACXC,cAAe,OACfC,OAAQ,oBACRC,aAAc,OACdC,gBAAiB,UAEjBC,SAAU,CACNR,QAAS,OACTC,cAAe,MACfQ,eAAgB,eAChBP,MAAO,QAGXQ,GAAI,CACAC,OAAQ,aACRC,QAAS,IACTC,SAAU,OACVC,UAAW,SACXC,MAAO,WAGXC,GAAI,CACAF,UAAW,SACXC,MAAO,YAIfE,iBAAkB,CACdjB,QAAS,OACTC,cAAe,SACfQ,eAAgB,iB,OCNTS,EAxBC,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,GAAIC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,MAC/C,OACI,sBAAKC,MAAO1B,EAAOC,QAAnB,UACI,qBAAIyB,MAAO1B,EAAOC,QAAQiB,GAA1B,qBAAuCG,KACvC,sBAAKK,MAAO1B,EAAOC,QAAQS,SAA3B,UACI,oBAAIgB,MAAO1B,EAAOC,QAAQW,GAA1B,SAA+BU,IAC/B,sBAAKI,MAAO1B,EAAOmB,iBAAnB,UACI,cAACQ,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAASN,EAApC,uBACA,cAACI,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAASL,EAApC,uBACA,cAACG,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAASJ,EAApC,6BCyFLK,E,kDAlGX,WAAaC,GAAO,IAAD,8BACf,cAAMA,IASVR,UAAY,WACR,EAAKS,UAAS,SAAAC,GAAK,MAAK,CACpBX,MAAOW,EAAMX,MAAQ,OAZV,EAgBnBE,UAAY,WACR,EAAKQ,UAAS,SAAAC,GAAK,MAAK,CACpBX,MAAOW,EAAMX,MAAQ,OAlBV,EAsBnBG,MAAQ,WACJ,EAAKO,SAAS,CACVV,MAAO,KArBX,EAAKW,MAAQ,CACTZ,GAAIU,EAAMV,GACVC,MAAOS,EAAMT,MACbY,UAAU,GANC,E,qDA4BnB,WACIC,QAAQC,IAAI,oBAAqBC,KAAKJ,MAAMZ,M,gCAGhD,WACIc,QAAQC,IAAI,qBAAsBC,KAAKJ,MAAMZ,M,kCAGjD,WACIc,QAAQC,IAAI,uBAAwBC,KAAKJ,MAAMZ,M,uCAGnD,SAA0BiB,GACtBH,QAAQC,IAAI,4BAA6BC,KAAKJ,MAAMZ,IAChDiB,EAAUC,QACNF,KAAKJ,MAAMX,MAAQ,IAAM,GAEzBe,KAAKd,YACLc,KAAKL,SAAS,CACVE,UAAU,KAIdG,KAAKL,SAAS,CACVE,UAAU,IAKdG,KAAKJ,MAAMX,MAAQ,IAAM,GACzBe,KAAKb,YACLa,KAAKL,SAAS,CACVE,UAAU,KAIdG,KAAKL,SAAS,CACVE,UAAU,M,mCAM1B,SAAsBI,EAAWE,GAM7B,OALAL,QAAQC,IAAI,wBAAyBC,KAAKJ,MAAMZ,KAKzC,I,oBAGX,WAEI,OADAc,QAAQC,IAAI,SAAUC,KAAKJ,MAAMZ,IAE7B,cAAC,EAAD,CACIA,GAAIgB,KAAKJ,MAAMZ,GACfC,MAAOe,KAAKJ,MAAMX,MAClBC,UAAWc,KAAKd,UAChBC,UAAWa,KAAKb,UAChBC,MAAOY,KAAKZ,Y,GAzFGgB,aCShBzC,EAbA,CACX0C,cAAe,CACXtC,MAAO,OACPF,QAAS,OACTS,eAAgB,SAChBF,gBAAiB,WAGrBkC,OAAQ,CACJ9B,OAAQ,cCWD+B,EAfO,SAACb,GACnB,OACI,sBAAML,MAAO1B,EAAO0C,cAApB,UACI,cAACf,EAAA,EAAD,CAAQD,MAAO1B,EAAO2C,OAAQf,QAAQ,WAAWC,QAASE,EAAMc,IAAhE,6BACA,cAAClB,EAAA,EAAD,CAAQD,MAAO1B,EAAO2C,OAAQf,QAAQ,WAAWC,QAASE,EAAMe,OAAhE,kCACA,cAACnB,EAAA,EAAD,CAAQD,MAAO1B,EAAO2C,OAAQf,QAAQ,WAAWC,QAAS,kBAAMkB,OAAOC,SAASC,UAAhF,6CCsCGC,EA5CH,WACV,MAAgCC,IAAMC,SAAS,CAC7C,CAAE/B,GAAI,EAAGC,MAAO,KADlB,mBAAO+B,EAAP,KAAiBC,EAAjB,KAIA,EAA8BH,IAAMC,UAAS,GAA7C,mBAAOb,EAAP,KAAgBgB,EAAhB,KAqBA,OACE,gCACE,cAAC,EAAD,CACEV,IAtBa,WACjBU,GAAW,GAEXD,EAAY,GAAD,mBACND,GADM,CAET,CACEhC,GAAIgC,EAASG,OAAS,EACtBlC,MAAO,OAgBPwB,OAXoB,WACpBO,EAASG,OAAS,IACpBD,GAAW,GACXD,EAAYD,EAASI,MAAM,GAAI,QAS/B,qBAAKC,UAAU,oBAAf,SACGL,EAASM,KAAI,SAAA1D,GACZ,OAAO,cAAC,EAAD,CAELoB,GAAIpB,EAAQoB,GACZC,MAAOrB,EAAQqB,MACfiB,QAASA,GAHJtC,EAAQoB,aCjCzBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ef9db4e9.chunk.js","sourcesContent":["const styles = {\r\n    counter: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '300px',\r\n        marginTop: '50px',\r\n        paddingBottom: '30px',\r\n        border: '2px solid #1976d2',\r\n        borderRadius: '10px',\r\n        backgroundColor: '#f8ebfa',\r\n\r\n        mainPart: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-around',\r\n            width: '100%',\r\n        },\r\n\r\n        h1: { \r\n            margin: '0 0 0 20px',\r\n            padding: '0',\r\n            fontSize: '600%',\r\n            textAlign: 'center',\r\n            color: '#1976d2'\r\n        },\r\n\r\n        h2: { \r\n            textAlign: 'center',\r\n            color: '#1976d2'\r\n        },\r\n    },\r\n\r\n    buttonsContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n    }\r\n}\r\n\r\nexport default styles","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.js';\r\n\r\nconst Counter = ({id, count, increment, decrement, reset}) => {\r\n    return (\r\n        <div style={styles.counter}>\r\n            <h2 style={styles.counter.h2}>Counter {id}</h2>\r\n            <div style={styles.counter.mainPart}>\r\n                <h1 style={styles.counter.h1}>{count}</h1>\r\n                <div style={styles.buttonsContainer}>\r\n                    <Button variant=\"outlined\" onClick={increment}>Increment</Button>\r\n                    <Button variant=\"outlined\" onClick={decrement}>Decrement</Button>\r\n                    <Button variant=\"outlined\" onClick={reset}>Reset</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nCounter.propTypes = {\r\n    id: PropTypes.number.isRequired.bind,\r\n    count: PropTypes.number.isRequired,\r\n    increment: PropTypes.func.isRequired,\r\n    decrement: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Counter;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Counter from '../components/Counter/index'\r\n\r\nclass CounterContainer extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: props.id,\r\n            count: props.count,\r\n            isRender: true\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState(state => ({\r\n            count: state.count + 1\r\n        }))\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState(state => ({\r\n            count: state.count - 1\r\n        }))\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            count: 0\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\", this.state.id)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(\"componentDidUpdate\", this.state.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount\", this.state.id)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"componentWillRecieveProps\", this.state.id)\r\n        if (nextProps.isAdded){\r\n            if (this.state.count % 2 === 0)\r\n            {\r\n                this.increment()\r\n                this.setState({\r\n                    isRender: true\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isRender: false\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            if (this.state.count % 2 === 1){\r\n                this.decrement()\r\n                this.setState({\r\n                    isRender: true\r\n                })\r\n            }\r\n            else{\r\n                this.setState({\r\n                    isRender: false\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate\", this.state.id)\r\n        /*\r\n        if (!this.state.isRender){\r\n            return false\r\n        }*/\r\n        return true\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\", this.state.id)\r\n        return (\r\n            <Counter \r\n                id={this.state.id}\r\n                count={this.state.count} \r\n                increment={this.increment}\r\n                decrement={this.decrement}\r\n                reset={this.reset}/>\r\n        )\r\n    }\r\n}\r\n\r\nCounterContainer.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    count: PropTypes.number.isRequired\r\n}\r\n\r\nexport default CounterContainer","const styles = {\r\n    parentCounter: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#f8ebfa'\r\n    },\r\n\r\n    button: {\r\n        margin: '30px 10px'\r\n    }\r\n}\r\n\r\nexport default styles;","import React from 'react';\r\nimport { Button } from '@mui/material';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './styles.js';\r\n\r\nconst ParentCounter = (props) => {\r\n    return (\r\n        <div  style={styles.parentCounter}>\r\n            <Button style={styles.button} variant=\"outlined\" onClick={props.add}>Add new counter</Button>\r\n            <Button style={styles.button} variant=\"outlined\" onClick={props.remove}>Delete first counter</Button>\r\n            <Button style={styles.button} variant=\"outlined\" onClick={() => window.location.reload()}>Return to the initial state</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nParentCounter.propTypes = {\r\n    add: PropTypes.func.isRequired,\r\n    remove: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ParentCounter;","import React from \"react\";\r\nimport CounterContainer from \"./containers/CounterContainer\";\r\nimport ParentCounter from \"./components/ParentCounter\";\r\n\r\nconst App = () => {\r\n  const [counters, setCounters] = React.useState([\r\n    { id: 1, count: 0},\r\n  ])\r\n\r\n  const [isAdded, setIsAdded] = React.useState(false)\r\n\r\n  const addCounter = () => {\r\n    setIsAdded(true)\r\n\r\n    setCounters([\r\n      ...counters,\r\n      {\r\n        id: counters.length + 1,\r\n        count: 0\r\n      }\r\n    ])\r\n  }\r\n\r\n  const removeLastCounter = () => {\r\n    if (counters.length > 1){\r\n      setIsAdded(false)\r\n      setCounters(counters.slice(0, -1))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ParentCounter \r\n        add={addCounter} \r\n        remove={removeLastCounter}/>\r\n      <div className=\"counter-container\">\r\n        {counters.map(counter => {\r\n          return <CounterContainer \r\n            key={counter.id}\r\n            id={counter.id}\r\n            count={counter.count}\r\n            isAdded={isAdded}/>\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}